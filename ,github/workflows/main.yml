name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 저장소의 코드를 Runner에 복사
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up JDK for Gradle
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' # 원하는 Java 버전을 선택
          distribution: 'zulu'

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

            

      # 경로 확인...
      - name: Check current directory
        run: pwd

      # 내용물 확인...
      - name: Check ls
        run: ls -al

      # 폴더 이동 및 내용물 확인
      - name: Change Dir and Check
        run: |
          cd app00
          ls -al

      # Build the swyapp01.jar using Gradle bootJar
      - name: Build swyapp01.jar
        run: |
          cd app00
          chmod +x ./gradlew
          ./gradlew clean bootJar

      # Docker login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_ID }} # Docker Hub 사용자명
          password: ${{ secrets.DOCKER_HUB_PWD }} # Docker Hub 비밀번호 (GitHub Secrets 사용)

      # Build Docker image
      - name: Build Docker Image 
        run: |
          cd app00
          docker build -t ${{ secrets.DOCKER_HUB_ID }}/app00:latest .
      
      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_ID }}/app00:latest


  swy-job-01:
    runs-on: ubuntu-latest
    # connect ssh
    # docker pull run
    steps:
      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.EC2_KEY }}
          username: ubuntu
          port: 22
          script: |
            sudo docker rm -f msweb
            sudo docker rmi -f kimgugbee/swyapp
            sudo docker run -d --name msweb -p 8002:8765 kimgugbee/prj00




